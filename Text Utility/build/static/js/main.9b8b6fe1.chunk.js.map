{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","msg","role","word","lower","charAt","slice","capitalize","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9b8b6fe1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                   {/*  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n                   <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                </li>\r\n               {/* <li className=\"nav-item\">\r\n                   <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n    </li>*/}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </nav> \r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n       // console.log(\"Uppercase was clicked\" +  text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper Case!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" +  text);\r\n         let newText = text.toLowerCase();\r\n         setText(newText)\r\n         props.showAlert(\"Converted to Lower Case!\", \"success\");\r\n     }\r\n\r\n     const handleClearClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" +  text);\r\n         let newText = '';\r\n         setText(newText)\r\n         props.showAlert(\"Clear Text!\", \"success\");\r\n     }\r\n\r\n     const handleCopyClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" +  text);\r\n         let text = document.getElementById(\"myBox\");\r\n         text.select();\r\n         navigator.clipboard.writeText(text.value);\r\n         props.showAlert(\"Copy to Clipboard!\", \"success\");\r\n         \r\n     }\r\n\r\n     const handleExtraSpaces = ()=>{\r\n        // console.log(\"Uppercase was clicked\" +  text);\r\n         let newText = text.split(/[ ]+/);\r\n         setText(newText.join(\" \"))\r\n         props.showAlert(\"Remove Extra Spaces!\", \"success\");\r\n     }\r\n     \r\n\r\n    const handleOnChange = (event)=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white' ,color:props.mode==='dark'?'white':'#042743'}}  id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p><b>{text.split(\" \").length}</b>Words and <b>{text.length}</b>Characters</p>\r\n            <p><b>{0.008 * text.split(\" \").length}</b> Minutes Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here \"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-${props.alert.msg}fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n//import About from './components/About';\n\n//import {\n//  BrowserRouter as Router,\n//  Switch,\n//  Route,\n//} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title ='TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title ='TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n\n    {/*<Navbar title=\"TextUtils\" aboutText=\"About us\"/>*/}\n    {/*<Navbar/> */}\n   {/* <Router>*/}\n    <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container  my-3\">\n    {/*<Switch>*/}\n       {/* <Route exact path=\"/about\">\n          <About />\n  </Route>*/}\n       {/* <Route exact path=\"/\">*/}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n       {/* </Route>\n    </Switch>*/}\n    </div>\n    {/*</Router>*/}\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}